;simple_ga.snv
cpp symb intern
not support queu default
typecheck.snv (environment)のSubr(car/cdr, rplaca/prlacd, etc)を型チェック付きFunc(lambda (c) (if (eq '<cons> (type c)) (<Subr car> c) (throw 'type-error)))に置き換える、loadして使う
debug::repl エラー時にスタックトレースと関数名、定義されているファイル・行数を表示する. loadをdebug::load, throwをdebug::throwに置き換え、throw時に定義箇所を表示できるようにする
lapplyの実装をFuncとSubrで分ける（levalで2回型チェックしていて無駄、js実装はFuncがFunction(Subr)を継承しているので型を分ける必要がない）
ベース言語では型指定関数を実装し、genelicはutil.snvで対応する (equal, last, to-list, to-vect, (to-queu), symbol, empty, getat, setat)
typeclass S式で型を表現する ex) int -> int -> int := (int . (int . int))
senva/trans/pytest.snvテスト項目が古い、共通化したい
js senva canvas game
kotlin getc
secdマシン語によるsenva実装
secdマシン処理系
;cs call dll
cs type.invokemember getattr setattr
cs win app api voiceroid control
kotlin classloader によるeval
cpp call dll
s式継続渡しによる複数プラットフォームの結合、python依存コードはpython上で処理し、java依存コードはjava上で実行する
compile to jvm
compile to lua vm
compile to llvm
compile to arm asm
switchのプチコン4版senva
pasoconmini mz-80c pc-8001 版
web audio apiによる効果音生成器
;ps senvaのrecursive lprint
is-definedにより、util.snvで、定義されていない場合のみappend、reverse、take、dropを最定義するようにする
型チェックしている関数を専用型関数に分解してlispから呼べるようにする、コンパイル時に最適化できるようにする
getlines EOFまでreadし結果のlistを返す
(! with (f (file "path.txt")) (getlines f))でopenとcloseを挿入するwithをsenva/utilに追加
ipythonみたいな対話環境
py transの末尾呼出最適化
定数畳み込み最適化
多相型推論
throwの仕様変更eidを数値からシンボルにする
s式prolog
s式factor
trans javascript
trans kotrin
trans c++
s式xml 動的HP
s式mml
自然言語生成 伺か
time-stream open: タイマーの生成 write: 指定時間経過するまでsleepする read: 現在時刻を取得する
lock-stream open: スレッドの生成 read: ロックの取得 write: ロックの開放
