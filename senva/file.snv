(load "senva/util.snv")

(! case (processor)
   ('python (do
			  (define file::read
				(lambda (path)
				  (! let* ((fin ((py "open") path "r"))
						   (str ((-> fin "read"))))
					 (do ((-> fin "close"))
					     str))))
			  (define file::write
				(lambda (path str)
				  (! let ((fout ((py "open") path "w")))
					 (do ((-> fout "write") str)
					     ((-> fout "close")))))))
	'javascript (do (define file::read
		  (lambda (path)
			(! let ((req (new "XMLHttpRequest")))
			   (do ((-> req "open") "GET"
									(sprint (-> (js "location") "origin") "/" path)
									nil)
;				   ((-> req "overrideMimeType") "text/plain; charset=UTF-8")
				   ((-> req "setRequestHeader") "Pragma" "no-cache")
				   ((-> req "setRequestHeader") "Cache-Control" "no-cache")
				   ((-> req "setRequestHeader") "If-Modified-Since" "Thu, 01 Jun 1970 00:00:00 GMT")
				   ((-> req "send") (js "null"))
				   (if (equal 200 (-> req "status"))
					 (-> req "responseText")
					 (throw senva::error::file-not-found
							(sprint "not found file: " path)))))))
				  (define file::write
					(lambda (path str)
					  (throw 'undefined (sprint (processor) " don't support file::write."))))) ; TODO
;	'c++ ()
;	'cs ()
;	'kotlin ()
;	'powershell ()
	t (throw 'undefined (sprint (processor) " don't support file-IO."))))
